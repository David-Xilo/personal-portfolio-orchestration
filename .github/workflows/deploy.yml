name: Infrastructure Deployment

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
      confirm_apply:
        description: 'Type "yes" to confirm apply/destroy'
        required: false
        default: 'no'
        type: string

env:
  # Set environment-specific variables
  TF_VAR_FILE: 'terraform.tfvars'
  PROJECT_ID: 'personal-portfolio-safehouse'
  SERVICE_ACCOUNT_EMAIL: 'safehouse-terraform-cicd@personal-portfolio-safehouse.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/942519139037/locations/global/workloadIdentityPools/safehouse-github-pool/providers/safehouse-github-provider'

jobs:
  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.SERVICE_ACCOUNT_EMAIL }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Terraform Format Check
        run: |
          cd terraform
          terraform fmt -check

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Validate
        run: |
          cd terraform
          terraform validate

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: validate
    if: github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy'
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ env.WORKLOAD_IDENTITY_PROVIDER }}'
          service_account: '${{ env.SERVICE_ACCOUNT_EMAIL }}'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Set Repository Variable
        run: |
          echo "TF_VAR_github_repository=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Plan
        run: |
          cd terraform
          echo "Using tfvars file: ${{ env.TF_VAR_FILE }}"
          echo "Repository: ${{ github.event.repository.name }}"
          echo "Environment: ${{ github.event.inputs.environment }}"
          
          if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            echo "Planning DESTROY operation..."
            terraform plan -destroy -var-file="${{ env.TF_VAR_FILE }}" -out=tfplan
          else
            echo "Planning infrastructure changes..."
            terraform plan -var-file="${{ env.TF_VAR_FILE }}" -out=tfplan
          fi

      - name: Show Plan Summary
        run: |
          cd terraform
          echo "## Terraform Plan Summary"
          echo "**Action:** ${{ github.event.inputs.action }}"
          echo "**Environment:** ${{ github.event.inputs.environment }}"
          echo "**Repository:** ${{ github.event.repository.name }}"
          echo "**Project:** ${{ env.PROJECT_ID }}"
          echo "**Triggered by:** @${{ github.actor }}"
          echo ""
          terraform show -no-color tfplan

      - name: Upload Plan Artifact
        if: github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy'
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan-${{ github.run_number }}-${{ github.event.inputs.environment }}
          path: terraform/tfplan
          retention-days: 7

  apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: plan
    if: (github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy') && github.event.inputs.confirm_apply == 'yes'
    environment: ${{ github.event.inputs.environment }}
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: 'projects/942519139037/locations/global/workloadIdentityPools/safehouse-github-pool/providers/safehouse-github-provider'
          service_account: 'safehouse-terraform-cicd@${{ env.PROJECT_ID }}.iam.gserviceaccount.com'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.0

      - name: Set Repository Variable
        run: |
          echo "TF_VAR_github_repository=${{ github.event.repository.name }}" >> $GITHUB_ENV

      - name: Download Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan-${{ github.run_number }}-${{ github.event.inputs.environment }}
          path: terraform/

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Terraform Apply
        run: |
          cd terraform
          if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            echo "🗑️ DESTROYING infrastructure..."
            echo "This will DELETE all resources in ${{ github.event.inputs.environment }}!"
            terraform apply tfplan
          else
            echo "🚀 Applying infrastructure changes to ${{ github.event.inputs.environment }}..."
            terraform apply tfplan
          fi

      - name: Terraform Output
        if: github.event.inputs.action == 'apply'
        id: output
        run: |
          cd terraform
          echo "## 📊 Terraform Outputs"
          terraform output

      - name: Store Deployment Info
        if: github.event.inputs.action == 'apply' && success()
        run: |
          cd terraform
          # Create deployment metadata
          cat > deployment-info.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
            "environment": "${{ github.event.inputs.environment }}",
            "repository": "${{ github.event.repository.name }}",
            "commit": "${{ github.sha }}",
            "actor": "${{ github.actor }}",
            "workflow_run": "${{ github.run_number }}",
            "project_id": "${{ env.PROJECT_ID }}"
          }
          EOF
          
          echo "📝 Deployment completed successfully!"
          cat deployment-info.json

      - name: Notify Success
        if: success()
        run: |
          if [ "${{ github.event.inputs.action }}" == "destroy" ]; then
            echo "🗑️ Infrastructure destruction completed successfully!"
            echo "All resources in ${{ github.event.inputs.environment }} have been removed."
          else
            echo "✅ Infrastructure deployment to ${{ github.event.inputs.environment }} completed successfully!"
            echo "🔗 Check outputs above for service URLs and details."
          fi

      - name: Notify Failure
        if: failure()
        run: |
          echo "❌ Infrastructure ${{ github.event.inputs.action }} failed for ${{ github.event.inputs.environment }}!"
          echo "Check the logs above for details."
          exit 1

  safety_check:
    name: Safety Check
    runs-on: ubuntu-latest
    if: (github.event.inputs.action == 'apply' || github.event.inputs.action == 'destroy') && github.event.inputs.confirm_apply != 'yes'

    steps:
      - name: Safety Warning
        run: |
          echo "SAFETY CHECK FAILED"
          echo ""
          echo "You selected '${{ github.event.inputs.action }}' but didn't confirm with 'yes'"
          echo ""
          echo "To ${{ github.event.inputs.action }} infrastructure:"
          echo "1. Set 'Action' to '${{ github.event.inputs.action }}'"
          echo "2. Set 'Type yes to confirm' to 'yes'"
          echo "3. Run the workflow again"
          echo ""
          echo "This prevents accidental deployments!"
          echo ""
          echo "Target: ${{ github.event.inputs.environment }} environment"
          exit 1